set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Bundle {
    Bundle 'gmarik/Vundle.vim'

    " ui
        Bundle 'altercation/vim-colors-solarized'
        Bundle 'bling/vim-airline'
        Bundle 'nathanaelkane/vim-indent-guides'
        Bundle 'chriskempson/vim-tomorrow-theme'
    " EOF ui
    " enhance
        Bundle 'Raimondi/delimitMate'
        Bundle 'scrooloose/nerdcommenter'
        "Bundle 'tpope/vim-surround'
    " EOF enhance
    " navigate
        Bundle 'scrooloose/nerdtree'
        "Bundle 'jistr/vim-nerdtree-tabs'
    " EOF navigate
    " autocomplete
        Bundle 'Valloric/YouCompleteMe'
        Bundle 'davidhalter/jedi-vim'
        "Bundle 'Shougo/neosnippet.vim'
        "Bundle 'Shougo/neosnippet-snippets'
        "Bundle 'honza/vim-snippets'
    " EOF autocomplete
    " language
        Bundle 'mattn/emmet-vim'
        Bundle 'othree/html5.vim'
        Bundle 'groenewege/vim-less'
        Bundle 'pangloss/vim-javascript'
        Bundle 'kchmck/vim-coffee-script'
        Bundle 'elzr/vim-json'
    " EOF language
" EOF Bundle
call vundle#end()
filetype plugin indent on
" Config
    " ui
        " show statusline
        set laststatus=2
        "let g:airline_theme='bubblegum'
        " ???
        set ttimeoutlen=50

        set wildmenu
        "set wildmode=list:longest,full
        set showcmd

        set number
        syntax on
        "colorscheme Tomorrow-Night

        set nowrap

        " Terminal
        if !has('gui_running')
            set t_Co=256
            set background=dark
            "colorscheme Tomorrow-Night
            let g:solarized_termcolors=256
            "colorscheme solarized
        endif
        " EOF Terminal

        " GUI
        if has('gui_running')
            set go-=T
            set background=dark
            "set guifont=Meslo\ LG\ S\ 10
            "set guifont=Menlo\ 10
            set guifont=Source\ Code\ Pro\ Medium\ 10
            colorscheme Tomorrow-Night

            " enable indent-guides only when using gui
            let g:indent_guides_enable_on_vim_startup=1
        endif
        " EOF GUI
        " Indent guides
            let g:indent_guides_guide_size=1
            let g:indent_guides_start_level=2
        " EOF Indent guides
        " Airline
            let g:airline_powerline_fonts=1
            let g:airline#extensions#tabline#enabled=1
            let g:airline#extensions#tabline#left_sep=' '
            let g:airline#extensions#tabline#left_alt_sep='|'
        " EOF Airline
        " NerdTree
            " disable nerdtree open on gui startup
            let g:nerdtree_tabs_open_on_gui_startup=0
        " EOF NerdTree
    " EOF ui
    " editing
        let mapleader=","
        set backspace=indent,eol,start
        set scrolloff=3

        " show matching brackets/parenthesis
        set showmatch

        set autoindent
        set cindent
        set expandtab
        set softtabstop=4
        set shiftwidth=4
        set shiftround

        set ignorecase
        set smartcase
        set hlsearch
        set incsearch

        set wrapmargin=80

        " keymap
            nnoremap <Leader><Space> :set nohlsearch<cr>
            nnoremap <C-F4> :close<cr>

            " window switch
                nnoremap <A-Up> <C-W>k
                nnoremap <A-Down> <C-W>j
                nnoremap <A-Left> <C-W>h
                nnoremap <A-Right> <C-W>l
            " EOF window switch
            " nerdtree
            nmap <silent> <F3> :NERDTreeToggle<cr>

            " smart home
            "noremap <expr> <silent> <Home> col('.') == match(getline('.'), '\S') + 1 ? '0' : '^'
            noremap <expr> <Home> (col('.') == matchend(getline('.'), '^\s*')+1 ? '0' : '^')
            "noremap <expr> <End>  (col('.') == match(getline('.'), '\s*$') ? '$' : 'g_')
            "vnoremap <expr> <End> (col('.') == match(getline('.'), '\s*$') ? '$h' : 'g_')
            "imap <silent> <Home> <C-O><Home>
            imap <Home> <C-o><Home>
            "imap <End> <C-o><End>

            " pindah tab
            noremap <silent> <C-Tab> :tabnext<cr>

            " resize window
            nnoremap <C-S-Up>    <C-w>+
            nnoremap <C-S-Down>  <C-w>-
            nnoremap <C-S-Left>  <C-w><
            nnoremap <C-S-Right> <C-w>>
        " EOF keymap
        " Swapfile
            set dir=~/.vim_swap
            set backupdir=~/.vim_backup
        " EOF Swapfile
    " EOF editing
    " Per file setting
        " html
        au Filetype html setlocal tabstop=2 shiftwidth=2 softtabstop=2
        " js
        au Filetype html setlocal ts=2 sw=2 sts=2
        "css,less
        au Filetype css setlocal ts=2 sw=2 sts=2
        au Filetype less setlocal ts=2 sw=2 sts=2
        " asm
        au Filetype asm setlocal ts=8 sw=8 sts=8 syntax=fasm
    " EOF Per file setting
" EOF Config

