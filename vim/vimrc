" Vundle Config {
    set nocompatible
    filetype off
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
" // Vundle Config
" Plugin list {
    Plugin 'gmarik/Vundle.vim'
    " Color scheme {
        Plugin 'chriskempson/base16-vim'
        Plugin 'junegunn/seoul256.vim'
        Plugin 'chriskempson/vim-tomorrow-theme'
        Plugin 'nanotech/jellybeans.vim'
    " // Color scheme
    Plugin 'ap/vim-css-color'
    "Plugin 'slj/gundo.vim'
    Plugin 'scrooloose/nerdtree'
    Plugin 'scrooloose/nerdcommenter'
    Plugin 'majutsushi/tagbar'
    "Plugin 'jlanzarotta/bufexplorer'
    "Plugin 'kchmck/vim-coffee-script'
    Plugin 'tpope/vim-surround'
    Plugin 'tpope/vim-markdown'
    "Plugin 'vim-scripts/vim-auto-save'
    Plugin 'Glench/Vim-Jinja2-Syntax'
    "Plugin 'davidhalter/jedi-vim'
    "Plugin 'bling/vim-bufferline'
    Plugin 'nathanaelkane/vim-indent-guides'
    "Plugin 'valloric/YouCompleteMe'
    Plugin 'groenewege/vim-less'
    "Plugin 'wavded/vim-stylus'
    "Plugin 'digitaltoad/vim-jade'
    Plugin 'editorconfig/editorconfig-vim'

    " Ctrl+P {
        Plugin 'Yggdroot/LeaderF'
        "Plugin 'kien/ctrlp.vim'
    " }
    "Plugin 'tpope/vim-fugitive'
    Plugin 'Raimondi/delimitMate'
    Plugin 'godlygeek/tabular'

    " JS beautify
    "Plugin 'maksimr/vim-jsbeautify'
    "Plugin 'einars/js-beautify'

    " Auto close tag
    Plugin 'tpope/vim-ragtag'

    " Snippet
    Plugin 'tomtom/tlib_vim'
    Plugin 'MarcWeber/vim-addon-mw-utils'
    Plugin 'garbas/vim-snipmate'
        " Optional
    Plugin 'honza/vim-snippets'

    " HTML Emmet
    Plugin 'mattn/emmet-vim'

    " Run inside vim
    "Plugin 'thinca/vim-quickrun'

    " Syntax checking
    "Plugin 'scrooloose/syntastic'

    " Status line
    Plugin 'itchyny/lightline.vim'
        "Plugin 'Lokaltog/powerline', {'rtp':'/powerline/bindings/vim'}
        "Plugin 'bling/vim-airline'

    " Colorpicker
    "Plugin 'abijr/colorpicker'

    " Ember.JS
    "Plugin 'dsawardekar/ember.vim'

    "Plugin 'mustache/vim-mustache-handlebars'
    " endplugins
    call vundle#end()
" } // Plugin list

" Config {
    filetype plugin indent on
    syntax on
    colors Tomorrow-Night
    "colors seoul256
    set autoindent
    set backspace=indent,eol,start  " smart backspace
    set expandtab
    set ignorecase
    set shiftround
    set shiftwidth=4
    set smartcase
    set smarttab
    set softtabstop=4
    set tabstop=4
    set dir=~/.vim_swap
    set backupdir=~/.vim_backup
    set backup
    "set regexpengine=1      " Slow vim
    set laststatus=2        " statusline not shown in single window
    "set mouse=a             " Enable mouse

    " If running on terminal
    "if !has('gui_running')
        "set t_Co=256
    "endif

    " Dont know for what {
        set more
        set number
        set scrolloff=3
		"set showcmd
        "set vb t_vb=
        "set wildmenu
    	set history=1000
    	set nowrap
        "set splitbelow
        "set splitright
    	set foldcolumn=0
    	set foldmethod=indent
    	set foldnestmax=10
    	set nofoldenable
    " } // Dont know for what

    " Auto ch dir
    "set autochdir
    set autoread

    " Autoload vimrc
    au BufWritePost .vimrc so ~/.vimrc

    " Gui {
        set guifont=Source\ Code\ Pro\ Semibold\ 10
        "set guifont=Menlo\ 10
        "set guifont=Consolas\ 10
	    set guioptions-=T  " -toolbar
    	set guioptions-=r  " -right scrollbar
        set guioptions-=m  " -menubar
    " // Gui

    " Per Filetype setting {
        autocmd Filetype html setlocal ts=4 sts=4 sw=4
	    autocmd Filetype coffee setlocal ts=2 sts=2 sw=2
    	autocmd Filetype javascript setlocal ts=4 sts=4 sw=4
    " } // Per Filetype setting
    "
    " Resize window {
        noremap <c-s-up> <c-w>+
        noremap <c-s-down> <c-w>-
        noremap <c-s-left> <c-w>>
        noremap <c-s-right> <c-w><
    " }

    " PluginConfig {
        " nerdtree {
            let NERDTreeQuitOnOpen=1
        " } / nerdtree
        " tagbar {
    	    let g:tagbar_width=30
	    " } / tagbar
        " autosave {
            "let g:auto_save=0
        " }
        " indent-guides {
            let g:indent_guides_start_level=2
            let g:indent_guides_guide_size=1
            if has("gui_running")
                let g:indent_guides_enable_on_vim_startup=1
            endif

        " }
        " code beautify {
            autocmd FileType javascript nnoremap <buffer> <c-f> :call JsBeautify()<cr>
            autocmd FileType html nnoremap <buffer> <c-f> :call HtmlBeautify()<cr>
            autocmd FileType css nnoremap <buffer> <c-f> :call CSSBeautify()<cr>
            " For range beautify
            autocmd FileType javascript vnoremap <buffer> <c-f> :call RangeJsBeautify()<cr>
            autocmd FileType html vnoremap <buffer> <c-f> :call RangeHtmlBeautify()<cr>
            autocmd FileType css vnoremap <buffer> <c-f> :call RangeCSSBeautify()<cr>
        " } // code beautify
        " linting {
            "let g:syntastic_python_checkers = ['pyflakes']
            "let g:syntastic_javascript_checkers = ['jslint']
        " } // linting
    " } // Plugin

    " Key mapping {
        let mapleader=","
	    nnoremap <F2> :NERDTreeToggle<cr>
    	nnoremap <F3> :TagbarToggle<cr>
    	nnoremap <F4> :GundoToggle<cr>
	    " Copy paste system clipboard {
	        noremap <C-c> "+y
    	    inoremap <C-v> <Esc>"+gPa
    	    noremap <C-v> "+gP
	    " } / Copy paste system clipboard
        "
    	" Toggle Folding {
	        nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space")<cr>
    	    vnoremap <Space> zf
	    " } // Toggle Folding

    	" Bubble match bracket {
	        nmap <C-up> [e
	        nmap <C-down> ]e
    	    vmap <C-up> [egv
	        vmap <C-down> ]egv
    	" } // Bubble match bracket

	    " Closing buffer {
			nmap <C-F4> :bdelete<cr>
            nmap <C-Left> :bprevious<cr>
            nmap <C-Right> :bnext<cr>
    	" } // Closing buffer

        " Pindah jendela {
            nmap <silent> <A-Up> :wincmd k<cr>
            nmap <silent> <A-Down> :wincmd j<cr>
            nmap <silent> <A-Left> :wincmd h<cr>
            nmap <silent> <A-Right> :wincmd l<cr>
        " } // Pindah cendela
    " } // Key mapping
" } // Config
